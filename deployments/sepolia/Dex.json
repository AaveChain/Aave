{
  "address": "0x82d6c12e57a3eb6E18fCc791fFbD84615BDb2a31",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_daiAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "buyDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "daiBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usdcBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x908612e9d29ee8c8a895343b4f5e6778b17e59c81d0e8e7ea4b966925108f0cc",
  "receipt": {
    "to": null,
    "from": "0x877F253108434DC0510D7D7F69B231E997621adC",
    "contractAddress": "0x82d6c12e57a3eb6E18fCc791fFbD84615BDb2a31",
    "transactionIndex": 42,
    "gasUsed": "1034139",
    "logsBloom": "0x
    "blockHash": "0xd65fb88c02c9b502ad6bfcc8250bad7d697e62ed0e1b1c71b92209eb321d440a",
    "transactionHash": "0x908612e9d29ee8c8a895343b4f5e6778b17e59c81d0e8e7ea4b966925108f0cc",
    "logs": [],
    "blockNumber": 4660518,
    "cumulativeGasUsed": "10889984",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x68194a729C2450ad26072b3D33ADaCbcef39D574",
    "0xda9d4f9b69ac6C22e444eD9aF0CfC043b7a7f53f"
  ],
  "numDeployments": 1,
  "solcInputHash": "379336529a79f81be0c7d068527bbece",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_daiAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"daiBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usdcBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dex.sol\":\"Dex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c\",\"license\":\"AGPL-3.0\"},\"contracts/Dex.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.10;\\r\\n\\r\\nimport {IERC20} from \\\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\\\";\\r\\n\\r\\ncontract Dex {\\r\\n    address payable public owner;\\r\\n\\r\\n    IERC20 private dai;\\r\\n    IERC20 private usdc;\\r\\n\\r\\n    // exchange rate indexes\\r\\n    uint256 dexARate = 90;\\r\\n    uint256 dexBRate = 100;\\r\\n\\r\\n    // keeps track of individuals' dai balances\\r\\n    mapping(address => uint256) public daiBalances;\\r\\n\\r\\n    // keeps track of individuals' USDC balances\\r\\n    mapping(address => uint256) public usdcBalances;\\r\\n\\r\\n    constructor(address  _daiAddress, address _usdcAddress) {\\r\\n        owner = payable(msg.sender);\\r\\n        dai = IERC20(_daiAddress);\\r\\n        usdc = IERC20(_usdcAddress);\\r\\n    }\\r\\n\\r\\n    function depositUSDC(uint256 _amount) external {\\r\\n        usdcBalances[msg.sender] += _amount;\\r\\n        uint256 allowance = usdc.allowance(msg.sender, address(this));\\r\\n        require(allowance >= _amount, \\\"Check the token allowance\\\");\\r\\n        usdc.transferFrom(msg.sender, address(this), _amount);\\r\\n    }\\r\\n\\r\\n    function depositDAI(uint256 _amount) external {\\r\\n        daiBalances[msg.sender] += _amount;\\r\\n        uint256 allowance = dai.allowance(msg.sender, address(this));\\r\\n        require(allowance >= _amount, \\\"Check the token allowance\\\");\\r\\n        dai.transferFrom(msg.sender, address(this), _amount);\\r\\n    }\\r\\n\\r\\n    function buyDAI() external {\\r\\n        uint256 daiToReceive = ((usdcBalances[msg.sender] / dexARate) * 100) *\\r\\n            (10**12);\\r\\n        dai.transfer(msg.sender, daiToReceive);\\r\\n    }\\r\\n\\r\\n    function sellDAI() external {\\r\\n        uint256 usdcToReceive = ((daiBalances[msg.sender] * dexBRate) / 100) /\\r\\n            (10**12);\\r\\n        usdc.transfer(msg.sender, usdcToReceive);\\r\\n    }\\r\\n\\r\\n    function getBalance(address _tokenAddress) external view returns (uint256) {\\r\\n        return IERC20(_tokenAddress).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    function withdraw(address _tokenAddress) external onlyOwner {\\r\\n        IERC20 token = IERC20(_tokenAddress);\\r\\n        token.transfer(msg.sender, token.balanceOf(address(this)));\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(\\r\\n            msg.sender == owner,\\r\\n            \\\"Only the contract owner can call this function\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\",\"keccak256\":\"0xef283f3bb93215afc51b40eb394ba9174f1f04413b7c0bdcbfee15e6ae3f1cda\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052605a60035560646004553480156200001b57600080fd5b506040516200117038038062001170833981810160405281019062000041919062000175565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001bc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200013d8262000110565b9050919050565b6200014f8162000130565b81146200015b57600080fd5b50565b6000815190506200016f8162000144565b92915050565b600080604083850312156200018f576200018e6200010b565b5b60006200019f858286016200015e565b9250506020620001b2858286016200015e565b9150509250929050565b610fa480620001cc6000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b14610116578063a99c68c514610141578063ef0673421461017e578063f688bcfb146101bb578063f8b2cb4f146101e457610091565b806305abf9041461009657806315602991146100ad578063365833e1146100c457806351cff8d9146100ed57610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100ab610221565b005b3480156100b957600080fd5b506100c2610332565b005b3480156100d057600080fd5b506100eb60048036038101906100e69190610aa8565b610443565b005b3480156100f957600080fd5b50610114600480360381019061010f9190610b33565b610625565b005b34801561012257600080fd5b5061012b6107b4565b6040516101389190610b81565b60405180910390f35b34801561014d57600080fd5b5061016860048036038101906101639190610b33565b6107d8565b6040516101759190610bab565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a09190610b33565b6107f0565b6040516101b29190610bab565b60405180910390f35b3480156101c757600080fd5b506101e260048036038101906101dd9190610aa8565b610808565b005b3480156101f057600080fd5b5061020b60048036038101906102069190610b33565b6109ea565b6040516102189190610bab565b60405180910390f35b600064e8d4a510006064600354600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102789190610c24565b6102829190610c55565b61028c9190610c55565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102eb929190610cbe565b6020604051808303816000875af115801561030a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032e9190610d1f565b5050565b600064e8d4a510006064600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103899190610c55565b6103939190610c24565b61039d9190610c24565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103fc929190610cbe565b6020604051808303816000875af115801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190610d1f565b5050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104929190610d4c565b925050819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104f8929190610da2565b602060405180830381865afa158015610515573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105399190610de0565b90508181101561057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590610e6a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105dd93929190610e8a565b6020604051808303816000875af11580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610d1f565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa90610f33565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070e9190610f53565b602060405180830381865afa15801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190610de0565b6040518363ffffffff1660e01b815260040161076c929190610cbe565b6020604051808303816000875af115801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af9190610d1f565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108579190610d4c565b925050819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016108bd929190610da2565b602060405180830381865afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610de0565b905081811015610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a90610e6a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109a293929190610e8a565b6020604051808303816000875af11580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190610d1f565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a259190610f53565b602060405180830381865afa158015610a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a669190610de0565b9050919050565b600080fd5b6000819050919050565b610a8581610a72565b8114610a9057600080fd5b50565b600081359050610aa281610a7c565b92915050565b600060208284031215610abe57610abd610a6d565b5b6000610acc84828501610a93565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0082610ad5565b9050919050565b610b1081610af5565b8114610b1b57600080fd5b50565b600081359050610b2d81610b07565b92915050565b600060208284031215610b4957610b48610a6d565b5b6000610b5784828501610b1e565b91505092915050565b6000610b6b82610ad5565b9050919050565b610b7b81610b60565b82525050565b6000602082019050610b966000830184610b72565b92915050565b610ba581610a72565b82525050565b6000602082019050610bc06000830184610b9c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2f82610a72565b9150610c3a83610a72565b925082610c4a57610c49610bc6565b5b828204905092915050565b6000610c6082610a72565b9150610c6b83610a72565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ca457610ca3610bf5565b5b828202905092915050565b610cb881610af5565b82525050565b6000604082019050610cd36000830185610caf565b610ce06020830184610b9c565b9392505050565b60008115159050919050565b610cfc81610ce7565b8114610d0757600080fd5b50565b600081519050610d1981610cf3565b92915050565b600060208284031215610d3557610d34610a6d565b5b6000610d4384828501610d0a565b91505092915050565b6000610d5782610a72565b9150610d6283610a72565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9757610d96610bf5565b5b828201905092915050565b6000604082019050610db76000830185610caf565b610dc46020830184610caf565b9392505050565b600081519050610dda81610a7c565b92915050565b600060208284031215610df657610df5610a6d565b5b6000610e0484828501610dcb565b91505092915050565b600082825260208201905092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000610e54601983610e0d565b9150610e5f82610e1e565b602082019050919050565b60006020820190508181036000830152610e8381610e47565b9050919050565b6000606082019050610e9f6000830186610caf565b610eac6020830185610caf565b610eb96040830184610b9c565b949350505050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610f1d602e83610e0d565b9150610f2882610ec1565b604082019050919050565b60006020820190508181036000830152610f4c81610f10565b9050919050565b6000602082019050610f686000830184610caf565b9291505056fea2646970667358221220d2296958094316d8efebca3b06be7837b146ffb312248b64a08b58ffe2c5e5fa64736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b14610116578063a99c68c514610141578063ef0673421461017e578063f688bcfb146101bb578063f8b2cb4f146101e457610091565b806305abf9041461009657806315602991146100ad578063365833e1146100c457806351cff8d9146100ed57610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100ab610221565b005b3480156100b957600080fd5b506100c2610332565b005b3480156100d057600080fd5b506100eb60048036038101906100e69190610aa8565b610443565b005b3480156100f957600080fd5b50610114600480360381019061010f9190610b33565b610625565b005b34801561012257600080fd5b5061012b6107b4565b6040516101389190610b81565b60405180910390f35b34801561014d57600080fd5b5061016860048036038101906101639190610b33565b6107d8565b6040516101759190610bab565b60405180910390f35b34801561018a57600080fd5b506101a560048036038101906101a09190610b33565b6107f0565b6040516101b29190610bab565b60405180910390f35b3480156101c757600080fd5b506101e260048036038101906101dd9190610aa8565b610808565b005b3480156101f057600080fd5b5061020b60048036038101906102069190610b33565b6109ea565b6040516102189190610bab565b60405180910390f35b600064e8d4a510006064600354600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102789190610c24565b6102829190610c55565b61028c9190610c55565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102eb929190610cbe565b6020604051808303816000875af115801561030a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032e9190610d1f565b5050565b600064e8d4a510006064600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103899190610c55565b6103939190610c24565b61039d9190610c24565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103fc929190610cbe565b6020604051808303816000875af115801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190610d1f565b5050565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104929190610d4c565b925050819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104f8929190610da2565b602060405180830381865afa158015610515573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105399190610de0565b90508181101561057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590610e6a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105dd93929190610e8a565b6020604051808303816000875af11580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610d1f565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106aa90610f33565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070e9190610f53565b602060405180830381865afa15801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190610de0565b6040518363ffffffff1660e01b815260040161076c929190610cbe565b6020604051808303816000875af115801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af9190610d1f565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108579190610d4c565b925050819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016108bd929190610da2565b602060405180830381865afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610de0565b905081811015610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a90610e6a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109a293929190610e8a565b6020604051808303816000875af11580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e59190610d1f565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a259190610f53565b602060405180830381865afa158015610a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a669190610de0565b9050919050565b600080fd5b6000819050919050565b610a8581610a72565b8114610a9057600080fd5b50565b600081359050610aa281610a7c565b92915050565b600060208284031215610abe57610abd610a6d565b5b6000610acc84828501610a93565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0082610ad5565b9050919050565b610b1081610af5565b8114610b1b57600080fd5b50565b600081359050610b2d81610b07565b92915050565b600060208284031215610b4957610b48610a6d565b5b6000610b5784828501610b1e565b91505092915050565b6000610b6b82610ad5565b9050919050565b610b7b81610b60565b82525050565b6000602082019050610b966000830184610b72565b92915050565b610ba581610a72565b82525050565b6000602082019050610bc06000830184610b9c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2f82610a72565b9150610c3a83610a72565b925082610c4a57610c49610bc6565b5b828204905092915050565b6000610c6082610a72565b9150610c6b83610a72565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ca457610ca3610bf5565b5b828202905092915050565b610cb881610af5565b82525050565b6000604082019050610cd36000830185610caf565b610ce06020830184610b9c565b9392505050565b60008115159050919050565b610cfc81610ce7565b8114610d0757600080fd5b50565b600081519050610d1981610cf3565b92915050565b600060208284031215610d3557610d34610a6d565b5b6000610d4384828501610d0a565b91505092915050565b6000610d5782610a72565b9150610d6283610a72565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9757610d96610bf5565b5b828201905092915050565b6000604082019050610db76000830185610caf565b610dc46020830184610caf565b9392505050565b600081519050610dda81610a7c565b92915050565b600060208284031215610df657610df5610a6d565b5b6000610e0484828501610dcb565b91505092915050565b600082825260208201905092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000610e54601983610e0d565b9150610e5f82610e1e565b602082019050919050565b60006020820190508181036000830152610e8381610e47565b9050919050565b6000606082019050610e9f6000830186610caf565b610eac6020830185610caf565b610eb96040830184610b9c565b949350505050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610f1d602e83610e0d565b9150610f2882610ec1565b604082019050919050565b60006020820190508181036000830152610f4c81610f10565b9050919050565b6000602082019050610f686000830184610caf565b9291505056fea2646970667358221220d2296958094316d8efebca3b06be7837b146ffb312248b64a08b58ffe2c5e5fa64736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1358,
        "contract": "contracts/Dex.sol:Dex",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 1361,
        "contract": "contracts/Dex.sol:Dex",
        "label": "dai",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 1364,
        "contract": "contracts/Dex.sol:Dex",
        "label": "usdc",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 1367,
        "contract": "contracts/Dex.sol:Dex",
        "label": "dexARate",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1370,
        "contract": "contracts/Dex.sol:Dex",
        "label": "dexBRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1374,
        "contract": "contracts/Dex.sol:Dex",
        "label": "daiBalances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1378,
        "contract": "contracts/Dex.sol:Dex",
        "label": "usdcBalances",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}